<?xml version="1.0"?>
<project name="myproject" default="jar" basedir=".">
    <property name="src" location="${basedir}/src"/>
    <property name="out" location="${basedir}/out/production"/>
    <property name="outtest" location="out/production"/>
    <property name="dist" location="${basedir}/dist"/>
    <property name="test" location="${basedir}/src"/>
    <property name="lib" location="${basedir}/lib"/>
    <property name="reports" location="${basedir}/reports"/>
    <property name="version" value="1.0"/>

    <path id="classpath">
        <fileset dir="${lib}" includes="**/*.jar"/>
        <pathelement path="test.resources"/>
    </path>
    <path id="classpath1">
        <fileset dir="${lib}" includes="**/*.jar"/>
        <pathelement path="test.resources"/>
    </path>

    <path id="classpath-test">
        <fileset dir="${lib}" includes="**/*.jar"/>
        <pathelement path="${out}/test/test.resources"/>
        <pathelement path="${out}/main"/>
    </path>

    <target name="init" depends="clean">
        <mkdir dir="${out}/main/java"/>
        <mkdir dir="${out}/main/java/test.resources"/>
        <mkdir dir="${out}/main/test"/>
        <mkdir dir="${out}/main/test/test.resources"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${reports}/testreport"/>
    </target>

    <target name="copy-test-test.resources">
        <copy todir="${out}/test/resources">
            <fileset dir="${basedir}/src/test/test/resources"/>
        </copy>
    </target>

    <target name="copy_resources">
        <copy todir="${out}/main/resources">
            <fileset dir="${basedir}/src/main/resources"/>
        </copy>
    </target>

    <target name="compile" depends="copy-test-test.resources, copy_resources">
        <mkdir dir="${out}"/>
        <mkdir dir="${outtest}"/>
        <mkdir dir="${basedir}/reports"/>
        <!-- Compile the Java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${out}" includeantruntime="false"
               debug="true">
            <compilerarg value="-Xlint:unchecked"/>
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="testcompile" depends="compile">
        <javac srcdir="${test}" destdir="${out}" includeantruntime="false"
               debug="true">
            <compilerarg value="-Xlint:unchecked"/>
            <classpath refid="classpath"/>
        </javac>
    </target>



    <target name="test1" depends="testcompile">
        <junit fork="true" haltonfailure="true" printsummary="yes">
            <classpath location="lib"/>
            <classpath location="${out}"/>
            <formatter type="xml"/>
            <classpath refid="classpath-test"/>

            <batchtest fork="yes" todir="${basedir}/reports">
                <fileset dir="${test}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>

        </junit>
    </target>

    <path id="test.classpath">
        <pathelement location="${out}"/>
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <target name="test" depends="testcompile" description="run all tests">
        <junit fork="yes" printsummary="yes" haltonfailure="no">
            <classpath refid="test.classpath" />
            <batchtest fork="yes" todir="${reports}" >
                <fileset dir="${src}/test">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <formatter type="xml" />
        </junit>
    </target>


    <target name="testreport" depends="test">
        <junitreport todir="${basedir}/reports">
            <fileset dir="${basedir}/reports">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${basedir}/reports"/>
        </junitreport>
    </target>

    <target name="jar" depends="testreport">
        <jar destfile="${dist}/nje2jdbc.jar"
             basedir="${out}"
             includes="${out}/main">
        </jar>
    </target>

    <target name="clean" description="clean up">
        <delete dir="out/"/>
        <delete dir="dist"/>
        <delete dir="reports"/>
    </target>

</project>
