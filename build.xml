<?xml version="1.0"?>
<project name="myproject" default="jar" basedir=".">
    <property name="src" location="${basedir}/src"/>
    <property name="out" location="${basedir}/out/production"/>
    <property name="dist" location="${basedir}/dist"/>
    <property name="test" location="${basedir}/src/test"/>
    <property name="lib" location="${basedir}/lib"/>
    <property name="reports" location="${basedir}/reports"/>
    <property name="version" value="1.0"/>

    <path id="classpath">
        <fileset dir="${lib}" includes="**/*.jar"/>
        <pathelement path="src/main/java/resources"/>
        <pathelement path="src/test/java/resources"/>
        <pathelement location="${src}/main/java/com/nixsolutions/service/jdbc"/>
        <pathelement path="${out}/main"/>
        <pathelement location="${out}/test/java"/>
    </path>

    <target name="init" depends="clean">
        <mkdir dir="${out}/main/java"/>
        <mkdir dir="${out}/main/java/resources"/>
        <mkdir dir="${out}/main/test"/>
        <mkdir dir="${out}/main/test/resources"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${reports}/testreport"/>
    </target>

    <target name="copy-test-test.resources">
        <copy todir="${out}/test/resources">
            <fileset dir="${basedir}/src/test/java/resources/"/>
        </copy>
    </target>

    <target name="copy_resources">
        <copy todir="${out}/main/resources">
            <fileset dir="${basedir}/src/main/java/resources"/>
        </copy>
    </target>

    <target name="compile" depends="copy-test-test.resources, copy_resources">
        <mkdir dir="${out}"/>
        <mkdir dir="${basedir}/reports"/>
        <!-- Compile the Java code from ${src} into ${build} -->
        <javac srcdir="${basedir}/src/main" destdir="${out}/main" includeantruntime="false"
               debug="true">
            <compilerarg value="-Xlint:unchecked"/>
            <classpath refid="classpath"/>
        </javac>
        <javac srcdir="${basedir}/src/test/java" destdir="${out}/test" includeantruntime="false"
               debug="true">
            <compilerarg value="-Xlint:unchecked"/>
            <classpath refid="classpath"/>
        </javac>
    </target>

    <!--<target name="testcompile" depends="compile">-->
        <!--<javac srcdir="${test}/java/com" destdir="${out}/test" includeantruntime="false"-->
               <!--debug="true">-->
            <!--<compilerarg value="-Xlint:unchecked"/>-->
            <!--<classpath refid="classpath"/>-->
        <!--</javac>-->
    <!--</target>-->
    <path id="test.classpath">
            <pathelement path="${}"/>
            <pathelement path="${test.resources.dir}"/>

        <pathelement location="${out}/test/java"/>
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <target name="test" depends="compile" description="run all tests">

        <junit fork="yes" printsummary="yes" haltonfailure="no">
            <classpath refid="test.classpath" />
            <batchtest fork="yes" todir="${reports}" >
                <fileset dir="${src}/test/java">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <formatter type="xml" />
        </junit>

        <!--<junit fork="yes" printsummary="yes" haltonfailure="no">-->
            <!--<classpath refid="classpath"/>-->

            <!--<batchtest fork="yes" todir="${reports}">-->
                <!--<fileset dir="${src}/test/java">-->
                    <!--<include name="**/*Test.java"/>-->
                <!--</fileset>-->
            <!--</batchtest>-->
            <!--<formatter type="xml"/>-->
        <!--</junit>-->
    </target>


    <target name="testreport" depends="test">
        <junitreport todir="${basedir}/reports">
            <fileset dir="${basedir}/reports">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${basedir}/reports"/>
        </junitreport>
    </target>

    <target name="jar" depends="compile">
        <jar destfile="${dist}/app.jar"
             basedir="${out}/main"/>
    </target>

    <target name="clean" description="clean up">
        <delete dir="out/"/>
        <delete dir="dist"/>
        <delete dir="reports"/>
        <delete dir="target"/>
    </target>

</project>
